name: Build and Publish

on:
  release:
    types: [published]
jobs:
  clone_vendors:
    name: Clone vendors
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4

    - name: Install tree-sitter cli
      run: npm install -g tree-sitter-cli

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Dependencies
      run: uv sync --all-extras --dev --no-install-project

    - name: Clone vendors
      run: pdm run scripts/clone_vendors.py

    - uses: actions/upload-artifact@v4
      with:
        name: language-parsers
        path: parsers
  build-sdist:
    needs: clone_vendors
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download parsers
        uses: actions/download-artifact@v4
        with:
          name: language-parsers
          path: parsers

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install Dependencies
        run: uv sync --all-extras --dev --no-install-project

      - name: Set path in environment
        run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV

      - name: Build sdist
        run: uv build --sdist
        env:
          PROJECT_ROOT: ${{github.workspace}}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-sdist
          if-no-files-found: error
          path: dist
  build-wheels:
    needs: clone_vendors
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    name: Build wheel on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Dependencies
      run: uv sync --all-extras --dev --no-install-project

    - name: Set path in environment
      run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Build wheel
      run: uv build --wheel
      env:
        PROJECT_ROOT: ${{github.workspace}}

    - uses: actions/upload-artifact@v4
      with:
        name: dist-wheel-${{ matrix.os }}-${{ strategy.job-index }}
        if-no-files-found: error
        path: dist
  publish:
    name: Publish Python package
    needs: [build-wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/tree-sitter-language-pack/
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{secrets.PYPI_API_TOKEN}}
