name: CI

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:
  clone_vendors:
    name: Clone vendors
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4

    - name: Install tree-sitter cli
      run: npm install -g tree-sitter-cli

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Dependencies
      run: uv sync --all-extras --dev --no-install-project

    - name: Clone vendors
      run: uv run scripts/clone_vendors.py

    - name: Upload Parsers
      uses: actions/upload-artifact@v4
      with:
        name: language-parsers
        path: parsers

  validate:
    needs: clone_vendors
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Dependencies
      run: uv sync --all-extras --dev  --no-install-project

    - name: Load Cached Pre-Commit Dependencies
      id: cached-pre-commit-dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Run Linters
      run: uv run pre-commit run --show-diff-on-failure --color=always --all-files
  test:
    needs: clone_vendors
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Dependencies
      run: uv sync --all-extras --dev  --no-install-project

    - name: Test
      run: uv run test
  build:
    needs: [validate, test]
    name: Build source dist
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download parsers
      uses: actions/download-artifact@v4
      with:
        name: language-parsers
        path: parsers

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"

    - name: Install Dependencies
      run: uv sync --all-extras --dev --no-install-project

    - name: Set path in environment
      run: echo "PROJECT_ROOT=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Build
      run: uv build -v
      env:
        PROJECT_ROOT: ${{github.workspace}}
